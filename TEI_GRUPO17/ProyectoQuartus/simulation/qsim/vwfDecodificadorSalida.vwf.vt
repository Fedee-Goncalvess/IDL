// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "07/29/2025 02:32:55"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    unidad_control
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module unidad_control_vlg_vec_tst();
// constants                                           
// general purpose registers
reg b0;
reg b1;
reg b2;
reg CLK;
reg CONTINUAR;
reg Cout;
reg LOAD_F;
reg LOAD_I;
reg RECARGAR;
reg START;
reg UP_DOWN;
reg [11:0] VC;
reg [11:0] VF;
reg [11:0] VI;
// wires                                               
wire [11:0] Bout;
wire ERROR;
wire FIN;
wire Ienb_UC;
wire IenVF_UA;
wire IenVI_UA;
wire IenVI_UC;
wire OenVC_UC;
wire OenVI_UA;
wire PAUSA;

// assign statements (if any)                          
unidad_control i1 (
// port map - connection between master ports and signals/registers   
	.b0(b0),
	.b1(b1),
	.b2(b2),
	.Bout(Bout),
	.CLK(CLK),
	.CONTINUAR(CONTINUAR),
	.Cout(Cout),
	.ERROR(ERROR),
	.FIN(FIN),
	.Ienb_UC(Ienb_UC),
	.IenVF_UA(IenVF_UA),
	.IenVI_UA(IenVI_UA),
	.IenVI_UC(IenVI_UC),
	.LOAD_F(LOAD_F),
	.LOAD_I(LOAD_I),
	.OenVC_UC(OenVC_UC),
	.OenVI_UA(OenVI_UA),
	.PAUSA(PAUSA),
	.RECARGAR(RECARGAR),
	.START(START),
	.UP_DOWN(UP_DOWN),
	.VC(VC),
	.VF(VF),
	.VI(VI)
);
initial 
begin 
#1000000 $finish;
end 
initial 
begin 
#1000000 $finish;
end 
endmodule

